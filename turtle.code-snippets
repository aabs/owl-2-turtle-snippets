{
	"class": {
		"scope": "turtle",
		"prefix": "/c",
		"body": [
			"$1 rdf:type owl:Class $0.\n"
		],
		"description": "declare a class"
	},
	"add label": {
		"scope": "turtle",
		"prefix": "rlab",
		"body": [
			"rdfs:label \"$1\"@en ;\n$0"
		],
		"description": "insert an rdfs comment"
	},
	"add comment": {
		"scope": "turtle",
		"prefix": "rcom",
		"body": [
			"rdfs:comment \"$1\" ;\n$0"
		],
		"description": "insert an rdfs comment"
	},
	"data property": {
		"scope": "turtle",
		"prefix": "rdpr",
		"body": [
			"$1 rdf:type owl:DatatypeProperty ;",
			"    rdfs:domain $2 ;",
			"    rdfs:range $3 ;",
			"    rdfs:comment \"$4\"@en .\n$0"
		],
		"description": "create a datatype property"
	},
	"object property": {
		"scope": "turtle",
		"prefix": "ropr",
		"body": [
			"$1 rdf:type owl:ObjectProperty ;",
			"    rdfs:domain $2 ;",
			"    rdfs:range $3 ;",
			"    rdfs:comment \"$4\"@en .\n$0"
		],
		"description": "create an object property"
	},
	"time value": {
		"scope": "turtle",
		"prefix": "rtime",
		"body": [
			" [ a time:Instant; time:inXSDDate \"$1\"^^xsd:date ]$0"
		],
		"description": "create a time instant"
	},
	"intersect class": {
		"scope": "turtle",
		"prefix": "rintersect",
		"body": [
			" $1 owl:subClassOf [ a owl:Class;",
			"    owl:intersectionOf ($2 $3)",
			"]  .$0"
		],
		"description": "A class defined as being the intersect of two others"
	},
	"class intersection": {
		"scope": "turtle",
		"prefix": "/ci",
		"body": [
			"[ rdf:type owl:Class; owl:intersectionOf ( C1…Cn ) ]"
		]
	},
	"class union": {
		"scope": "turtle",
		"prefix": "/cu",
		"body": [
			"[ rdf:type owl:Class; owl:unionOf ( C1…Cn ) ]"
		]
	},
	"class complement": {
		"scope": "turtle",
		"prefix": "/cc",
		"body": [
			"[ rdf:type owl:Class; owl:complementOf C ]"
		]
	},
	"class enumeration": {
		"scope": "turtle",
		"prefix": "/ce",
		"body": [
			"[ rdf:type owl:Class; owl:oneOf ( C1…Cn ) ]"
		]
	},
	"subclass": {
		"scope": "turtle",
		"prefix": "/csub",
		"body": [
			"C1 rdfs:subClassOf C2."
		]
	},
	"equivalent classes": {
		"scope": "turtle",
		"prefix": "/cequ",
		"body": [
			"Cj owl:equivalentClass Cj+1."
		]
	},
	"disjoint classes": {
		"scope": "turtle",
		"prefix": "/cd",
		"body": [
			"C1 owl:disjointWith C2."
		]
	},
	"pairwise disjoint classes": {
		"scope": "turtle",
		"prefix": "/cda",
		"body": [
			"_:x rdf:type owl:AllDisjointClasses. _:x owl:members ( C1 … Cn )."
		]
	},
	"disjoint union": {
		"scope": "turtle",
		"prefix": "/cdu",
		"body": [
			"CN owl:disjointUnionOf ( C1… Cn )."
		]
	},
	"universal": {
		"scope": "turtle",
		"prefix": "/pru",
		"body": [
			"_:x rdf:type owl:Restriction. _:x owl:onProperty R. _:x owl:allValuesFrom D."
		]
	},
	"existential": {
		"scope": "turtle",
		"prefix": "/pre",
		"body": [
			"_:x rdf:type owl:Restriction._:x owl:onProperty P._:x owl:someValuesFrom C"
		]
	},
	"individual value": {
		"scope": "turtle",
		"prefix": "/pri",
		"body": [
			"_:x rdf:type owl:Restriction. _:x owl:onProperty P. _:x owl:hasValue a."
		]
	},
	"local reflexivity": {
		"scope": "turtle",
		"prefix": "/prx",
		"body": [
			"_:x rdf:type owl:Restriction. _:x owl:onProperty P. _:x owl:hasSelf \"true\"^^xsd:boolean."
		]
	},
	"exact cardinality": {
		"scope": "turtle",
		"prefix": "/prc",
		"body": [
			"_:x rdf:type owl:Restriction. _:x owl:onProperty P. _:x owl:cardinality n."
		]
	},
	"qualified exact cardinality": {
		"scope": "turtle",
		"prefix": "/prcqxc",
		"body": [
			"_:x rdf:type owl:Restriction. _:x owl:onProperty P. _:x owl:qualifiedCardinality n. _:x owl:onClass C. "
		]
	},
	"maximum cardinality": {
		"scope": "turtle",
		"prefix": "/prcmax",
		"body": [
			"_:x rdf:type owl:Restriction. _:x owl:onProperty P. _:x owl:maxCardinality n."
		]
	},
	"qualified maximum cardinality": {
		"scope": "turtle",
		"prefix": "/prcqmax",
		"body": [
			" _:x rdf:type owl:Restriction. _:x owl:onProperty P. _:x owl:maxQualifiedCardinality n. _:x owl:onClass C."
		]
	},
	"minimum cardinality": {
		"scope": "turtle",
		"prefix": "/prcmin",
		"body": [
			"_:x rdf:type owl:Restriction. _:x owl:onProperty P. _:x owl:minCardinality n."
		]
	},
	"qualified minimum cardinality": {
		"scope": "turtle",
		"prefix": "/prcqmin",
		"body": [
			" _:x rdf:type owl:Restriction. _:x owl:onProperty P. _:x owl:minQualifiedCardinality n. _:x owl:onClass C."
		]
	},
	"n-ary universal": {
		"scope": "turtle",
		"prefix": "/prdu",
		"body": [
			"_:x rdf:type owl:Restriction. _:x owl:onProperties ( R1 … Rn ). _:x owl:allValuesFrom Dn."
		]
	},
	"n-ary existential": {
		"scope": "turtle",
		"prefix": "/prde",
		"body": [
			"_:x rdf:type owl:Restriction. _:x owl:onProperties ( R1 … Rn). _:x owl:someValuesFrom Dn."
		]
	},
	"inverse property": {
		"scope": "turtle",
		"prefix": "/pv",
		"body": [
			"_:x owl:inverseOf PN"
		]
	},
	"data range complement": {
		"scope": "turtle",
		"prefix": "/drc",
		"body": [
			"_:x rdf:type rdfs:Datatype. _:x owl:datatypeComplementOf D."
		]
	},
	"data range intersection": {
		"scope": "turtle",
		"prefix": "/dri",
		"body": [
			" _:x rdf:type rdfs:Datatype. _:x owl:intersectionOf (D1…Dn)."
		]
	},
	"data range union": {
		"scope": "turtle",
		"prefix": "/dru",
		"body": [
			"_:x rdf:type rdfs:Datatype. _:x owl:unionOf (D1…Dn)."
		]
	},
	"literal enumeration": {
		"scope": "turtle",
		"prefix": "/denum",
		"body": [
			"_:x rdf:type rdfs:Datatype. _:x owl:oneOf ( v1 … vn )."
		]
	},
	"datatype restriction": {
		"scope": "turtle",
		"prefix": "/drs",
		"body": [
			"_:x rdf:type rdfs:Datatype. _:x owl:onDatatype DN. _:x owl:withRestrictions (_:x1 ... _:xn). _:xj fj vj. j=1…n P1 rdfs:subPropertyOf P2. "
		]
	},
	"subproperty": {
		"scope": "turtle",
		"prefix": "/ppsub",
		"body": [
			"P1 rdfs:subPropertyOf P2. "
		]
	},
	"chain inclusion": {
		"scope": "turtle",
		"prefix": "/ppch",
		"body": [
			"P owl:propertyChainAxiom (P1 … Pn)."
		]
	},
	"domain": {
		"scope": "turtle",
		"prefix": "/ppdom",
		"body": [
			"$1 rdfs:domain $2 .\n$0"
		]
	},
	"range": {
		"scope": "turtle",
		"prefix": "/ppran",
		"body": [
			"$1 rdfs:range $2 .\n$0"
		]
	},
	"equivalent properties": {
		"scope": "turtle",
		"prefix": "/ppequ",
		"body": [
			"Pj owl:equivalentProperty Pj+1. j=1…n-1"
		]
	},
	"disjoint properties": {
		"scope": "turtle",
		"prefix": "/ppd",
		"body": [
			"P1 owl:propertyDisjointWith P2."
		]
	},
	"all disjoint properties": {
		"scope": "turtle",
		"prefix": "/ppdd",
		"body": [
			"_:x rdf:type owl:AllDisjointProperties. _:x owl:members ( P1 … Pn )."
		]
	},
	"inverse properties": {
		"scope": "turtle",
		"prefix": "/ppinv",
		"body": [
			"P1 owl:inverseOf P2."
		]
	},
	"functional property": {
		"scope": "turtle",
		"prefix": "/ppfun",
		"body": [
			"P rdf:type owl:FunctionalProperty."
		]
	},
	"inverse functional property": {
		"scope": "turtle",
		"prefix": "/ppinfu",
		"body": [
			"P rdf:type owl:InverseFunctionalProperty."
		]
	},
	"reflexive property": {
		"scope": "turtle",
		"prefix": "/ppref",
		"body": [
			"P rdf:type owl:ReflexiveProperty."
		]
	},
	"irreflexive property": {
		"scope": "turtle",
		"prefix": "/ppirref",
		"body": [
			"P rdf:type owl:IrreflexiveProperty."
		]
	},
	"symmetric property": {
		"scope": "turtle",
		"prefix": "/ppsym",
		"body": [
			"P rdf:type owl:SymmetricProperty."
		]
	},
	"Asymmetric Property": {
		"scope": "turtle",
		"prefix": "/ppasym",
		"body": [
			"P rdf:type owl:AsymmetricProperty."
		]
	},
	"Transitive Property": {
		"scope": "turtle",
		"prefix": "/pptrans",
		"body": [
			"P rdf:type owl:TransitiveProperty"
		]
	},
	"equality": {
		"scope": "turtle",
		"prefix": "/aeq",
		"body": [
			"aj owl:sameAs aj+1. j=1…n-1"
		]
	},
	"prinequality": {
		"scope": "turtle",
		"prefix": "/ane",
		"body": [
			"a1 owl:differentFrom a2."
		]
	},
	"individual inequality": {
		"scope": "turtle",
		"prefix": "/aane",
		"body": [
			"_:x rdf:type owl:AllDifferent. _:x owl:members (a1 … an)."
		]
	},
	"assertion": {
		"scope": "turtle",
		"prefix": "/ac",
		"body": [
			"a rdf:type C."
		]
	},
	"object property assertion": {
		"scope": "turtle",
		"prefix": "/aprop",
		"body": [
			"a1 PN a2."
		]
	},
	"negative object property assertion": {
		"scope": "turtle",
		"prefix": "/anprop",
		"body": [
			"_:x rdf:type owl:NegativePropertyAssertion. _:x owl:sourceIndividual a1. _:x owl:assertionProperty P. _:x owl:targetIndividual a2."
		]
	},
	"name": {
		"scope": "turtle",
		"prefix": "//l",
		"body": [
			"rdfs:label \"$1\"@en ;$0"
		]
	},
	"comment": {
		"scope": "turtle",
		"prefix": "//c",
		"body": [
			"rdfs:comment T"
		]
	},
	"addition information": {
		"scope": "turtle",
		"prefix": "//ai",
		"body": [
			"rdfs:seeAlso T"
		]
	},
	"agent": {
		"scope": "turtle",
		"prefix": "//da",
		"body": [
			"rdfs:isDefinedBy T"
		]
	},
	"information": {
		"scope": "turtle",
		"prefix": "//v",
		"body": [
			"owl:versionInfo T"
		]
	},
	"deprecation": {
		"scope": "turtle",
		"prefix": "//dep",
		"body": [
			"owl:deprecated T"
		]
	},
	"backwards compatibility": {
		"scope": "turtle",
		"prefix": "//bc",
		"body": [
			"owl:backwardCompatibleWith T"
		]
	},
	"incompatibility": {
		"scope": "turtle",
		"prefix": "//incomp",
		"body": [
			"owl:incompatibleWith T"
		]
	},
	"prior version": {
		"scope": "turtle",
		"prefix": "//pv",
		"body": [
			"owl:priorVersion T"
		]
	}
}
